services:
  questionnaire-db:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: convenienttrial
      MYSQL_TCP_PORT: 3306
    volumes:
      - questionnaire_data:/var/lib/mysql
      - ./questionnaire_service/init_db.sql:/docker-entrypoint-initdb.d/init_db.sql
    ports:
      - "3306:3306"
    healthcheck:
      test: mysqladmin ping -h 127.0.0.1 -u $$MYSQL_USER --password=$$MYSQL_PASSWORD
      start_period: 5s
      interval: 5s
      timeout: 5s
      retries: 55

  questionnaire-service:
    build: ./questionnaire_service/
    depends_on:
      questionnaire-db:
        condition: service_healthy
      kafka-init:
        condition: service_completed_successfully
    ports:
      - "8000:8000"

  encryption-db:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: convenienttrial
      MYSQL_TCP_PORT: 3307
    volumes:
      - encryption_data:/var/lib/mysql
      - ./encryption_service/init_db.sql:/docker-entrypoint-initdb.d/init_db.sql
    ports:
      - "3307:3307"
    healthcheck:
      test: mysqladmin ping -h 127.0.0.1 -u $$MYSQL_USER --password=$$MYSQL_PASSWORD
      start_period: 5s
      interval: 5s
      timeout: 5s
      retries: 55

  encryption-service:
    build: ./encryption_service
    depends_on:
      encryption-db:
        condition: service_healthy
    ports:
      - "8001:8000"

  authentication-db:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: convenienttrial
      MYSQL_TCP_PORT: 3308
    volumes:
      - authentication_data:/var/lib/mysql
      - ./authentication_service/init_db.sql:/docker-entrypoint-initdb.d/init_db.sql
    ports:
      - "3308:3308"
    healthcheck:
      test: mysqladmin ping -h 127.0.0.1 -u $$MYSQL_USER --password=$$MYSQL_PASSWORD
      start_period: 5s
      interval: 5s
      timeout: 5s
      retries: 55

  authentication-service:
    build: ./authentication_service/
    environment:
      MYSQL_SERVER: db
      MYSQL_ROOT_USER: root
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: convenienttrial
    depends_on:
      authentication-db:
        condition: service_healthy
    ports:
      - "8002:8000"

  patient-bff:
    build: ./patient_bff/
    environment:
      AUTHENTICATION_SERVICE_URL: "http://authentication-service:8000"
      ENCRYPTION_SERVICE_URL: "http://encryption-service:8000"
      QUESTIONNAIRE_SERVICE_URL: "http://questionnaire-service:8000"
    depends_on:
      authentication-service:
        condition: service_started
      encryption-service:
        condition: service_started
      questionnaire-service:
        condition: service_started
      kafka-init:
        condition: service_completed_successfully
    ports:
      - "8003:8000"

  react-frontend:
    build:
      context: ./patient_frontend/
      args:
        - REACT_APP_BFF_URL=http://localhost:8003
    ports:
      - "3000:80"
    depends_on:
      - patient-bff

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CREATE_TOPICS: "test_topic:1:1,messages_requests:1:1,messages_responses:1:1"

  kafka-init:
    build:
      context: ./init_kafka/.
    depends_on:
      - kafka
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092

volumes:
  questionnaire_data:
  encryption_data:
  authentication_data:
